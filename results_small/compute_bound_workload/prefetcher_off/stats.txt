
---------- Begin Simulation Statistics ----------
simSeconds                                   0.004183                       # Number of seconds simulated (Second)
simTicks                                   4183354791                       # Number of ticks simulated (Tick)
finalTick                                  4183354791                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                     22.26                       # Real time elapsed on the host (Second)
hostTickRate                                187909914                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    8565108                       # Number of bytes of host memory used (Byte)
simInsts                                     13887659                       # Number of instructions simulated (Count)
simOps                                       13887706                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   623811                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     623813                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.l1_dcaches.demandHits::processor.cores.core.data      4781873                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1_dcaches.demandHits::total      4781873                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1_dcaches.overallHits::processor.cores.core.data      4781873                       # number of overall hits (Count)
board.cache_hierarchy.l1_dcaches.overallHits::total      4781873                       # number of overall hits (Count)
board.cache_hierarchy.l1_dcaches.demandMisses::processor.cores.core.data         3098                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1_dcaches.demandMisses::total         3098                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1_dcaches.overallMisses::processor.cores.core.data         3098                       # number of overall misses (Count)
board.cache_hierarchy.l1_dcaches.overallMisses::total         3098                       # number of overall misses (Count)
board.cache_hierarchy.l1_dcaches.demandMissLatency::processor.cores.core.data     73189698                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.demandMissLatency::total     73189698                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.overallMissLatency::processor.cores.core.data     73189698                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.overallMissLatency::total     73189698                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.demandAccesses::processor.cores.core.data      4784971                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1_dcaches.demandAccesses::total      4784971                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1_dcaches.overallAccesses::processor.cores.core.data      4784971                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1_dcaches.overallAccesses::total      4784971                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1_dcaches.demandMissRate::processor.cores.core.data     0.000647                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1_dcaches.demandMissRate::total     0.000647                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1_dcaches.overallMissRate::processor.cores.core.data     0.000647                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1_dcaches.overallMissRate::total     0.000647                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1_dcaches.demandAvgMissLatency::processor.cores.core.data 23624.821821                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1_dcaches.demandAvgMissLatency::total 23624.821821                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1_dcaches.overallAvgMissLatency::processor.cores.core.data 23624.821821                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.overallAvgMissLatency::total 23624.821821                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.blockedCycles::no_mshrs         3685                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1_dcaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1_dcaches.blockedCauses::no_mshrs           78                       # number of times access was blocked (Count)
board.cache_hierarchy.l1_dcaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1_dcaches.avgBlocked::no_mshrs    47.243590                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1_dcaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1_dcaches.writebacks::writebacks          108                       # number of writebacks (Count)
board.cache_hierarchy.l1_dcaches.writebacks::total          108                       # number of writebacks (Count)
board.cache_hierarchy.l1_dcaches.demandMshrHits::processor.cores.core.data         2031                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1_dcaches.demandMshrHits::total         2031                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1_dcaches.overallMshrHits::processor.cores.core.data         2031                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1_dcaches.overallMshrHits::total         2031                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1_dcaches.demandMshrMisses::processor.cores.core.data         1067                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.demandMshrMisses::total         1067                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.overallMshrMisses::processor.cores.core.data         1067                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.overallMshrMisses::total         1067                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.demandMshrMissLatency::processor.cores.core.data     28315655                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.demandMshrMissLatency::total     28315655                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.overallMshrMissLatency::processor.cores.core.data     28315655                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.overallMshrMissLatency::total     28315655                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.demandMshrMissRate::processor.cores.core.data     0.000223                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1_dcaches.demandMshrMissRate::total     0.000223                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1_dcaches.overallMshrMissRate::processor.cores.core.data     0.000223                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1_dcaches.overallMshrMissRate::total     0.000223                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1_dcaches.demandAvgMshrMissLatency::processor.cores.core.data 26537.633552                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.demandAvgMshrMissLatency::total 26537.633552                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.overallAvgMshrMissLatency::processor.cores.core.data 26537.633552                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.overallAvgMshrMissLatency::total 26537.633552                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.replacements          557                       # number of replacements (Count)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.hits::processor.cores.core.data           16                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.hits::total           16                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.misses::processor.cores.core.data            2                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.misses::total            2                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.missLatency::processor.cores.core.data        17316                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.missLatency::total        17316                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.accesses::processor.cores.core.data           18                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.accesses::total           18                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.missRate::processor.cores.core.data     0.111111                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.missRate::total     0.111111                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.avgMissLatency::processor.cores.core.data         8658                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.LoadLockedReq.avgMissLatency::total         8658                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.LoadLockedReq.mshrMisses::processor.cores.core.data            2                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.mshrMisses::total            2                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.mshrMissLatency::processor.cores.core.data        15984                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.mshrMissLatency::total        15984                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.mshrMissRate::processor.cores.core.data     0.111111                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.mshrMissRate::total     0.111111                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.LoadLockedReq.avgMshrMissLatency::processor.cores.core.data         7992                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.LoadLockedReq.avgMshrMissLatency::total         7992                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.ReadReq.hits::processor.cores.core.data      3216808                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.hits::total      3216808                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.misses::processor.cores.core.data         2530                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.misses::total         2530                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.missLatency::processor.cores.core.data     50156460                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.ReadReq.missLatency::total     50156460                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.ReadReq.accesses::processor.cores.core.data      3219338                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.accesses::total      3219338                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.missRate::processor.cores.core.data     0.000786                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.ReadReq.missRate::total     0.000786                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.ReadReq.avgMissLatency::processor.cores.core.data 19824.687747                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.ReadReq.avgMissLatency::total 19824.687747                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.ReadReq.mshrHits::processor.cores.core.data         1601                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.mshrHits::total         1601                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.mshrMisses::processor.cores.core.data          929                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.mshrMisses::total          929                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.ReadReq.mshrMissLatency::processor.cores.core.data     21020292                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.ReadReq.mshrMissLatency::total     21020292                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.000289                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.ReadReq.mshrMissRate::total     0.000289                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 22626.794403                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.ReadReq.avgMshrMissLatency::total 22626.794403                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.StoreCondReq.hits::processor.cores.core.data           11                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1_dcaches.StoreCondReq.hits::total           11                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1_dcaches.StoreCondReq.accesses::processor.cores.core.data           11                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.StoreCondReq.accesses::total           11                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.SwapReq.hits::processor.cores.core.data           13                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1_dcaches.SwapReq.hits::total           13                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1_dcaches.SwapReq.accesses::processor.cores.core.data           13                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.SwapReq.accesses::total           13                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.hits::processor.cores.core.data      1565065                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.hits::total      1565065                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.misses::processor.cores.core.data          568                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.misses::total          568                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.missLatency::processor.cores.core.data     23033238                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.WriteReq.missLatency::total     23033238                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.WriteReq.accesses::processor.cores.core.data      1565633                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.accesses::total      1565633                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.missRate::processor.cores.core.data     0.000363                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.WriteReq.missRate::total     0.000363                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.WriteReq.avgMissLatency::processor.cores.core.data 40551.475352                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.WriteReq.avgMissLatency::total 40551.475352                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.WriteReq.mshrHits::processor.cores.core.data          430                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.mshrHits::total          430                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.mshrMisses::processor.cores.core.data          138                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.mshrMisses::total          138                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1_dcaches.WriteReq.mshrMissLatency::processor.cores.core.data      7295363                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.WriteReq.mshrMissLatency::total      7295363                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1_dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.000088                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.WriteReq.mshrMissRate::total     0.000088                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1_dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 52864.949275                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.WriteReq.avgMshrMissLatency::total 52864.949275                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_dcaches.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1_dcaches.tags.tagsInUse   510.544628                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1_dcaches.tags.totalRefs      4782982                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1_dcaches.tags.sampledRefs         1069                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1_dcaches.tags.avgRefs  4474.258185                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1_dcaches.tags.warmupTick       183483                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1_dcaches.tags.occupancies::processor.cores.core.data   510.544628                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1_dcaches.tags.avgOccs::processor.cores.core.data     0.997157                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1_dcaches.tags.avgOccs::total     0.997157                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1_dcaches.tags.occupanciesTaskId::1024          512                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1_dcaches.tags.ageTaskId_1024::0           65                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1_dcaches.tags.ageTaskId_1024::3          447                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1_dcaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1_dcaches.tags.tagAccesses     38281173                       # Number of tag accesses (Count)
board.cache_hierarchy.l1_dcaches.tags.dataAccesses     38281173                       # Number of data accesses (Count)
board.cache_hierarchy.l1_dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1_icaches.demandHits::processor.cores.core.inst      1748164                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1_icaches.demandHits::total      1748164                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1_icaches.overallHits::processor.cores.core.inst      1748164                       # number of overall hits (Count)
board.cache_hierarchy.l1_icaches.overallHits::total      1748164                       # number of overall hits (Count)
board.cache_hierarchy.l1_icaches.demandMisses::processor.cores.core.inst          644                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1_icaches.demandMisses::total          644                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1_icaches.overallMisses::processor.cores.core.inst          644                       # number of overall misses (Count)
board.cache_hierarchy.l1_icaches.overallMisses::total          644                       # number of overall misses (Count)
board.cache_hierarchy.l1_icaches.demandMissLatency::processor.cores.core.inst     21243069                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1_icaches.demandMissLatency::total     21243069                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1_icaches.overallMissLatency::processor.cores.core.inst     21243069                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1_icaches.overallMissLatency::total     21243069                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1_icaches.demandAccesses::processor.cores.core.inst      1748808                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1_icaches.demandAccesses::total      1748808                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1_icaches.overallAccesses::processor.cores.core.inst      1748808                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1_icaches.overallAccesses::total      1748808                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1_icaches.demandMissRate::processor.cores.core.inst     0.000368                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1_icaches.demandMissRate::total     0.000368                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1_icaches.overallMissRate::processor.cores.core.inst     0.000368                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1_icaches.overallMissRate::total     0.000368                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1_icaches.demandAvgMissLatency::processor.cores.core.inst 32986.131988                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1_icaches.demandAvgMissLatency::total 32986.131988                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1_icaches.overallAvgMissLatency::processor.cores.core.inst 32986.131988                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.overallAvgMissLatency::total 32986.131988                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.blockedCycles::no_mshrs           37                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1_icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1_icaches.blockedCauses::no_mshrs            3                       # number of times access was blocked (Count)
board.cache_hierarchy.l1_icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1_icaches.avgBlocked::no_mshrs    12.333333                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1_icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1_icaches.demandMshrHits::processor.cores.core.inst          119                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1_icaches.demandMshrHits::total          119                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1_icaches.overallMshrHits::processor.cores.core.inst          119                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1_icaches.overallMshrHits::total          119                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1_icaches.demandMshrMisses::processor.cores.core.inst          525                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1_icaches.demandMshrMisses::total          525                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1_icaches.overallMshrMisses::processor.cores.core.inst          525                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1_icaches.overallMshrMisses::total          525                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1_icaches.demandMshrMissLatency::processor.cores.core.inst     17458524                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1_icaches.demandMshrMissLatency::total     17458524                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1_icaches.overallMshrMissLatency::processor.cores.core.inst     17458524                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1_icaches.overallMshrMissLatency::total     17458524                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1_icaches.demandMshrMissRate::processor.cores.core.inst     0.000300                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1_icaches.demandMshrMissRate::total     0.000300                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1_icaches.overallMshrMissRate::processor.cores.core.inst     0.000300                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1_icaches.overallMshrMissRate::total     0.000300                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1_icaches.demandAvgMshrMissLatency::processor.cores.core.inst 33254.331429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.demandAvgMshrMissLatency::total 33254.331429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.overallAvgMshrMissLatency::processor.cores.core.inst 33254.331429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.overallAvgMshrMissLatency::total 33254.331429                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.replacements           55                       # number of replacements (Count)
board.cache_hierarchy.l1_icaches.ReadReq.hits::processor.cores.core.inst      1748164                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1_icaches.ReadReq.hits::total      1748164                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1_icaches.ReadReq.misses::processor.cores.core.inst          644                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1_icaches.ReadReq.misses::total          644                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1_icaches.ReadReq.missLatency::processor.cores.core.inst     21243069                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1_icaches.ReadReq.missLatency::total     21243069                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1_icaches.ReadReq.accesses::processor.cores.core.inst      1748808                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_icaches.ReadReq.accesses::total      1748808                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1_icaches.ReadReq.missRate::processor.cores.core.inst     0.000368                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1_icaches.ReadReq.missRate::total     0.000368                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1_icaches.ReadReq.avgMissLatency::processor.cores.core.inst 32986.131988                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.ReadReq.avgMissLatency::total 32986.131988                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.ReadReq.mshrHits::processor.cores.core.inst          119                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1_icaches.ReadReq.mshrHits::total          119                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1_icaches.ReadReq.mshrMisses::processor.cores.core.inst          525                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1_icaches.ReadReq.mshrMisses::total          525                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1_icaches.ReadReq.mshrMissLatency::processor.cores.core.inst     17458524                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1_icaches.ReadReq.mshrMissLatency::total     17458524                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1_icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.000300                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1_icaches.ReadReq.mshrMissRate::total     0.000300                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1_icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 33254.331429                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.ReadReq.avgMshrMissLatency::total 33254.331429                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1_icaches.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1_icaches.tags.tagsInUse   343.149559                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1_icaches.tags.totalRefs      1748689                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1_icaches.tags.sampledRefs          525                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1_icaches.tags.avgRefs  3330.836190                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1_icaches.tags.warmupTick        86580                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1_icaches.tags.occupancies::processor.cores.core.inst   343.149559                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1_icaches.tags.avgOccs::processor.cores.core.inst     0.670214                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1_icaches.tags.avgOccs::total     0.670214                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1_icaches.tags.occupanciesTaskId::1024          470                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1_icaches.tags.ageTaskId_1024::0          176                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1_icaches.tags.ageTaskId_1024::3          294                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1_icaches.tags.ratioOccsTaskId::1024     0.917969                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1_icaches.tags.tagAccesses     13990989                       # Number of tag accesses (Count)
board.cache_hierarchy.l1_icaches.tags.dataAccesses     13990989                       # Number of data accesses (Count)
board.cache_hierarchy.l1_icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2_bus.transDist::ReadResp         1456                       # Transaction distribution (Count)
board.cache_hierarchy.l2_bus.transDist::WritebackDirty          108                       # Transaction distribution (Count)
board.cache_hierarchy.l2_bus.transDist::CleanEvict          504                       # Transaction distribution (Count)
board.cache_hierarchy.l2_bus.transDist::HardPFReq         2115                       # Transaction distribution (Count)
board.cache_hierarchy.l2_bus.transDist::ReadExReq          138                       # Transaction distribution (Count)
board.cache_hierarchy.l2_bus.transDist::ReadExResp          138                       # Transaction distribution (Count)
board.cache_hierarchy.l2_bus.transDist::ReadSharedReq         1456                       # Transaction distribution (Count)
board.cache_hierarchy.l2_bus.pktCount_board.cache_hierarchy.l1_icaches.mem_side_port::board.cache_hierarchy.l2_cache.cpu_side_port         1105                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2_bus.pktCount_board.cache_hierarchy.l1_dcaches.mem_side_port::board.cache_hierarchy.l2_cache.cpu_side_port         2695                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2_bus.pktCount::total         3800                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.l2_bus.pktSize_board.cache_hierarchy.l1_icaches.mem_side_port::board.cache_hierarchy.l2_cache.cpu_side_port        33600                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2_bus.pktSize_board.cache_hierarchy.l1_dcaches.mem_side_port::board.cache_hierarchy.l2_cache.cpu_side_port        75328                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2_bus.pktSize::total       108928                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.l2_bus.snoops              2115                       # Total snoops (Count)
board.cache_hierarchy.l2_bus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.l2_bus.snoopFanout::samples         3709                       # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::0         3709    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.snoopFanout::total         3709                       # Request fanout histogram (Count)
board.cache_hierarchy.l2_bus.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2_bus.reqLayer0.occupancy       806526                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2_bus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2_bus.respLayer0.occupancy       524475                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2_bus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2_bus.respLayer1.occupancy      1068263                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.l2_bus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.l2_bus.snoop_filter.totRequests         2206                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.l2_bus.snoop_filter.hitSingleRequests          612                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2_bus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2_bus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.l2_bus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.l2_bus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.l2_cache.demandHits::processor.cores.core.inst          319                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2_cache.demandHits::processor.cores.core.data          648                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2_cache.demandHits::total          967                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l2_cache.overallHits::processor.cores.core.inst          319                       # number of overall hits (Count)
board.cache_hierarchy.l2_cache.overallHits::processor.cores.core.data          648                       # number of overall hits (Count)
board.cache_hierarchy.l2_cache.overallHits::total          967                       # number of overall hits (Count)
board.cache_hierarchy.l2_cache.demandMisses::processor.cores.core.inst          206                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2_cache.demandMisses::processor.cores.core.data          421                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2_cache.demandMisses::total          627                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l2_cache.overallMisses::processor.cores.core.inst          206                       # number of overall misses (Count)
board.cache_hierarchy.l2_cache.overallMisses::processor.cores.core.data          421                       # number of overall misses (Count)
board.cache_hierarchy.l2_cache.overallMisses::total          627                       # number of overall misses (Count)
board.cache_hierarchy.l2_cache.demandMissLatency::processor.cores.core.inst     14699286                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2_cache.demandMissLatency::processor.cores.core.data     22697280                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2_cache.demandMissLatency::total     37396566                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l2_cache.overallMissLatency::processor.cores.core.inst     14699286                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2_cache.overallMissLatency::processor.cores.core.data     22697280                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2_cache.overallMissLatency::total     37396566                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l2_cache.demandAccesses::processor.cores.core.inst          525                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2_cache.demandAccesses::processor.cores.core.data         1069                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2_cache.demandAccesses::total         1594                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l2_cache.overallAccesses::processor.cores.core.inst          525                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2_cache.overallAccesses::processor.cores.core.data         1069                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2_cache.overallAccesses::total         1594                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l2_cache.demandMissRate::processor.cores.core.inst     0.392381                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2_cache.demandMissRate::processor.cores.core.data     0.393826                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2_cache.demandMissRate::total     0.393350                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l2_cache.overallMissRate::processor.cores.core.inst     0.392381                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2_cache.overallMissRate::processor.cores.core.data     0.393826                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2_cache.overallMissRate::total     0.393350                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l2_cache.demandAvgMissLatency::processor.cores.core.inst 71355.757282                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2_cache.demandAvgMissLatency::processor.cores.core.data 53912.779097                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2_cache.demandAvgMissLatency::total 59643.645933                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l2_cache.overallAvgMissLatency::processor.cores.core.inst 71355.757282                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.overallAvgMissLatency::processor.cores.core.data 53912.779097                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.overallAvgMissLatency::total 59643.645933                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2_cache.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l2_cache.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2_cache.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l2_cache.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2_cache.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l2_cache.demandMshrHits::processor.cores.core.inst           63                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2_cache.demandMshrHits::processor.cores.core.data          215                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2_cache.demandMshrHits::total          278                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l2_cache.overallMshrHits::processor.cores.core.inst           63                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2_cache.overallMshrHits::processor.cores.core.data          215                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2_cache.overallMshrHits::total          278                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l2_cache.demandMshrMisses::processor.cores.core.inst          143                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2_cache.demandMshrMisses::processor.cores.core.data          206                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2_cache.demandMshrMisses::total          349                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l2_cache.overallMshrMisses::cache_hierarchy.l2_cache.prefetcher         1695                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2_cache.overallMshrMisses::processor.cores.core.inst          143                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2_cache.overallMshrMisses::processor.cores.core.data          206                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2_cache.overallMshrMisses::total         2044                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l2_cache.demandMshrMissLatency::processor.cores.core.inst     11058597                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.demandMshrMissLatency::processor.cores.core.data     15011973                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.demandMshrMissLatency::total     26070570                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.overallMshrMissLatency::cache_hierarchy.l2_cache.prefetcher     92112829                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.overallMshrMissLatency::processor.cores.core.inst     11058597                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.overallMshrMissLatency::processor.cores.core.data     15011973                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.overallMshrMissLatency::total    118183399                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.demandMshrMissRate::processor.cores.core.inst     0.272381                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2_cache.demandMshrMissRate::processor.cores.core.data     0.192703                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2_cache.demandMshrMissRate::total     0.218946                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l2_cache.overallMshrMissRate::cache_hierarchy.l2_cache.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2_cache.overallMshrMissRate::processor.cores.core.inst     0.272381                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2_cache.overallMshrMissRate::processor.cores.core.data     0.192703                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2_cache.overallMshrMissRate::total     1.282309                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l2_cache.demandAvgMshrMissLatency::processor.cores.core.inst 77332.846154                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.demandAvgMshrMissLatency::processor.cores.core.data 72873.655340                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.demandAvgMshrMissLatency::total 74700.773639                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.overallAvgMshrMissLatency::cache_hierarchy.l2_cache.prefetcher 54343.851917                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.overallAvgMshrMissLatency::processor.cores.core.inst 77332.846154                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.overallAvgMshrMissLatency::processor.cores.core.data 72873.655340                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.overallAvgMshrMissLatency::total 57819.666830                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.l2_cache.HardPFReq.mshrMisses::cache_hierarchy.l2_cache.prefetcher         1695                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2_cache.HardPFReq.mshrMisses::total         1695                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l2_cache.HardPFReq.mshrMissLatency::cache_hierarchy.l2_cache.prefetcher     92112829                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.HardPFReq.mshrMissLatency::total     92112829                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.HardPFReq.mshrMissRate::cache_hierarchy.l2_cache.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2_cache.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l2_cache.HardPFReq.avgMshrMissLatency::cache_hierarchy.l2_cache.prefetcher 54343.851917                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.HardPFReq.avgMshrMissLatency::total 54343.851917                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadExReq.hits::processor.cores.core.data           30                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2_cache.ReadExReq.hits::total           30                       # number of ReadExReq hits (Count)
board.cache_hierarchy.l2_cache.ReadExReq.misses::processor.cores.core.data          108                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2_cache.ReadExReq.misses::total          108                       # number of ReadExReq misses (Count)
board.cache_hierarchy.l2_cache.ReadExReq.missLatency::processor.cores.core.data      6943383                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadExReq.missLatency::total      6943383                       # number of ReadExReq miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadExReq.accesses::processor.cores.core.data          138                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2_cache.ReadExReq.accesses::total          138                       # number of ReadExReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2_cache.ReadExReq.missRate::processor.cores.core.data     0.782609                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadExReq.missRate::total     0.782609                       # miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadExReq.avgMissLatency::processor.cores.core.data 64290.583333                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadExReq.avgMissLatency::total 64290.583333                       # average ReadExReq miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadExReq.mshrHits::processor.cores.core.data           49                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2_cache.ReadExReq.mshrHits::total           49                       # number of ReadExReq MSHR hits (Count)
board.cache_hierarchy.l2_cache.ReadExReq.mshrMisses::processor.cores.core.data           59                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2_cache.ReadExReq.mshrMisses::total           59                       # number of ReadExReq MSHR misses (Count)
board.cache_hierarchy.l2_cache.ReadExReq.mshrMissLatency::processor.cores.core.data      4481514                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadExReq.mshrMissLatency::total      4481514                       # number of ReadExReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadExReq.mshrMissRate::processor.cores.core.data     0.427536                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadExReq.mshrMissRate::total     0.427536                       # mshr miss rate for ReadExReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadExReq.avgMshrMissLatency::processor.cores.core.data 75957.864407                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadExReq.avgMshrMissLatency::total 75957.864407                       # average ReadExReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadSharedReq.hits::processor.cores.core.inst          319                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.hits::processor.cores.core.data          618                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.hits::total          937                       # number of ReadSharedReq hits (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.misses::processor.cores.core.inst          206                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.misses::processor.cores.core.data          313                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.misses::total          519                       # number of ReadSharedReq misses (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.missLatency::processor.cores.core.inst     14699286                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadSharedReq.missLatency::processor.cores.core.data     15753897                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadSharedReq.missLatency::total     30453183                       # number of ReadSharedReq miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadSharedReq.accesses::processor.cores.core.inst          525                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.accesses::processor.cores.core.data          931                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.accesses::total         1456                       # number of ReadSharedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.missRate::processor.cores.core.inst     0.392381                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadSharedReq.missRate::processor.cores.core.data     0.336198                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadSharedReq.missRate::total     0.356456                       # miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadSharedReq.avgMissLatency::processor.cores.core.inst 71355.757282                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadSharedReq.avgMissLatency::processor.cores.core.data 50331.939297                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadSharedReq.avgMissLatency::total 58676.653179                       # average ReadSharedReq miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrHits::processor.cores.core.inst           63                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrHits::processor.cores.core.data          166                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrHits::total          229                       # number of ReadSharedReq MSHR hits (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrMisses::processor.cores.core.inst          143                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrMisses::processor.cores.core.data          147                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrMisses::total          290                       # number of ReadSharedReq MSHR misses (Count)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.inst     11058597                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrMissLatency::processor.cores.core.data     10530459                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrMissLatency::total     21589056                       # number of ReadSharedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrMissRate::processor.cores.core.inst     0.272381                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrMissRate::processor.cores.core.data     0.157895                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadSharedReq.mshrMissRate::total     0.199176                       # mshr miss rate for ReadSharedReq accesses (Ratio)
board.cache_hierarchy.l2_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.inst 77332.846154                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadSharedReq.avgMshrMissLatency::processor.cores.core.data 71635.775510                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.ReadSharedReq.avgMshrMissLatency::total 74445.020690                       # average ReadSharedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l2_cache.WritebackDirty.hits::writebacks          108                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2_cache.WritebackDirty.hits::total          108                       # number of WritebackDirty hits (Count)
board.cache_hierarchy.l2_cache.WritebackDirty.accesses::writebacks          108                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2_cache.WritebackDirty.accesses::total          108                       # number of WritebackDirty accesses(hits+misses) (Count)
board.cache_hierarchy.l2_cache.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2_cache.prefetcher.demandMshrMisses          349                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfIssued         2969                       # number of hwpf issued (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfUseful          918                       # number of useful prefetch (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l2_cache.prefetcher.accuracy     0.309195                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l2_cache.prefetcher.coverage     0.724546                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfHitInCache          620                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfHitInMSHR          654                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfLate         1274                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfIdentified         3016                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfBufferHit            3                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfRemovedDemand           22                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfSpanPage           74                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l2_cache.prefetcher.pfUsefulSpanPage           48                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l2_cache.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l2_cache.tags.tagsInUse  1745.632832                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l2_cache.tags.totalRefs         3622                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l2_cache.tags.sampledRefs         2043                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l2_cache.tags.avgRefs     1.772883                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l2_cache.tags.warmupTick        69597                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l2_cache.tags.occupancies::cache_hierarchy.l2_cache.prefetcher  1475.508832                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2_cache.tags.occupancies::processor.cores.core.inst    92.770862                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2_cache.tags.occupancies::processor.cores.core.data   177.353139                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l2_cache.tags.avgOccs::cache_hierarchy.l2_cache.prefetcher     0.360232                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2_cache.tags.avgOccs::processor.cores.core.inst     0.022649                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2_cache.tags.avgOccs::processor.cores.core.data     0.043299                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2_cache.tags.avgOccs::total     0.426180                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l2_cache.tags.occupanciesTaskId::1022         1694                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2_cache.tags.occupanciesTaskId::1024          349                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l2_cache.tags.ageTaskId_1022::0          212                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2_cache.tags.ageTaskId_1022::3         1482                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2_cache.tags.ageTaskId_1024::0           78                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2_cache.tags.ageTaskId_1024::3          271                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l2_cache.tags.ratioOccsTaskId::1022     0.413574                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2_cache.tags.ratioOccsTaskId::1024     0.085205                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l2_cache.tags.tagAccesses        37339                       # Number of tag accesses (Count)
board.cache_hierarchy.l2_cache.tags.dataAccesses        37339                       # Number of data accesses (Count)
board.cache_hierarchy.l2_cache.tags.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp         1984                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq           59                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp           59                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq         1985                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l2_cache.mem_side_port::board.memory.mem_ctrl.port         4087                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l2_cache.mem_side_port::board.memory.mem_ctrl.port       130752                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples         2044                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0         2044    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total         2044                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy       989080                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy      3763138                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests         2044                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            333                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_cache_hierarchy.l2_cache.prefetcher::samples      1695.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples       143.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples       206.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 0.000000590400                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds            0                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds            0                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState           4874                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState             0                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs                   2044                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs                     0                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts                 2044                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts                   0                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ                 0                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts                0                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.02                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                  0.00                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6             2044                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0                801                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                415                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                280                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                166                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                116                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                 96                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                 62                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                 33                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                 27                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                 20                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                11                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 7                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 5                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 3                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 2                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.bytesReadWrQ                  0                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys             130816                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys               0                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         31270596.57513041                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys           0.00000000                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap               4183330150                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap               2046639.02                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::cache_hierarchy.l2_cache.prefetcher       108480                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst         9152                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data        13184                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadRate::cache_hierarchy.l2_cache.prefetcher 25931341.093368906528                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 2187717.862154426984                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 3151537.619607076515                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::cache_hierarchy.l2_cache.prefetcher         1695                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst          143                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data          206                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::cache_hierarchy.l2_cache.prefetcher     51874213                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst      6699725                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data      8731319                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::cache_hierarchy.l2_cache.prefetcher     30604.26                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     46851.22                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     42385.04                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::cache_hierarchy.l2_cache.prefetcher       108480                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst         9152                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data        13184                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total       130816                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst         9152                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total         9152                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.numReads::cache_hierarchy.l2_cache.prefetcher         1695                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst          143                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data          206                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total         2044                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::cache_hierarchy.l2_cache.prefetcher     25931341                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst      2187718                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data      3151538                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total     31270597                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst      2187718                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total      2187718                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::cache_hierarchy.l2_cache.prefetcher     25931341                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst      2187718                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data      3151538                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total     31270597                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts            2044                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts              0                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0          328                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1          174                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2          163                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3          172                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4          179                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5          200                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6          187                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7           68                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8          110                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9          142                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10           29                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11           21                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12           65                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13           57                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14           17                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15          132                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat           28980257                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat         10220000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat      67305257                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat           14178.21                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      32928.21                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits           1829                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits             0                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        89.48                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate          nan                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples          206                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   615.456311                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   470.185876                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   369.757436                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127           11      5.34%      5.34% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255           33     16.02%     21.36% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383           28     13.59%     34.95% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511           20      9.71%     44.66% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639           17      8.25%     52.91% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767            6      2.91%     55.83% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895            6      2.91%     58.74% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023            5      2.43%     61.17% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151           80     38.83%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total          206                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead       130816                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten            0                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW          31.270597                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW                  0                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               0.24                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           0.24                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          89.48                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy       978180                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy       489555                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy     10502940                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 330061680.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy     83005110                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy   1536509280                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy   1961546745                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   468.893231                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE   3993610587                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF    139620000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT     50124204                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy       556920                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy       292215                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy      4091220                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy            0                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 330061680.000000                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy     72100440                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy   1545692160                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy   1952794635                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   466.801104                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE   4017798052                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF    139620000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT     25936739                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles         12562628                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               0.904589                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               1.105474                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded        14974473                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded          188                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued       14433365                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued          745                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined      1086954                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined       854115                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           65                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples     12535116                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     1.151434                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     1.000258                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0      4084970     32.59%     32.59% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1      3690768     29.44%     62.03% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2      3692120     29.45%     91.49% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3       910675      7.26%     98.75% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4       156583      1.25%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value            4                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total     12535116                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            8    100.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass           99      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu      6582867     45.61%     45.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult           40      0.00%     45.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv           10      0.00%     45.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd      1000036      6.93%     52.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            2      0.00%     52.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            6      0.00%     52.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult      1010099      7.00%     59.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     59.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     59.54% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc        10020      0.07%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     59.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead      1062476      7.36%     66.97% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite       536521      3.72%     70.68% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead      3201029     22.18%     92.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite      1030160      7.14%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total     14433365                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         1.148913                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                   8                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000001                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads     28899874                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites      9025475                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses      8178902                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads     12502725                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites      7036421                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses      6250774                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses      8181922                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses      6251352                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts         2536                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             353                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           27512                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads      4410504                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores      1687808                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads      2202079                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores      1630500                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return        12391      1.92%      1.92% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect        12532      1.95%      3.87% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect          128      0.02%      3.89% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond       603941     93.77%     97.66% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond        13273      2.06%     99.72% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%     99.72% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond         1782      0.28%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total       644047                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return          404      0.63%      0.63% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          593      0.92%      1.55% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect           75      0.12%      1.66% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        62896     97.52%     99.18% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond          490      0.76%     99.94% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.94% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           40      0.06%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        64498                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return            4      0.03%      0.03% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          191      1.52%      1.55% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect           22      0.17%      1.72% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond        12224     97.15%     98.87% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond          121      0.96%     99.83% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     99.83% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond           21      0.17%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total        12583                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return        11986      2.07%      2.07% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect        11939      2.06%      4.13% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect           52      0.01%      4.14% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond       541036     93.36%     97.49% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond        12783      2.21%     99.70% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%     99.70% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond         1742      0.30%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total       579538                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            1      0.01%      0.01% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           94      0.82%      0.83% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           22      0.19%      1.02% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond        11276     98.39%     99.41% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           53      0.46%     99.87% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.87% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond           15      0.13%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total        11461                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget        17305      2.69%      2.69% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB       612577     95.11%     97.80% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS        12391      1.92%     99.72% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect         1774      0.28%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total       644047                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          772      6.14%      6.14% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return        11806     93.83%     99.96% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            4      0.03%     99.99% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            1      0.01%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total        12583                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted       603941                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken       587880                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect        12583                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss          381                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted         2520                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted        10063                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups       644047                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates         2473                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits       614904                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.954750                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          564                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups         1910                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits         1774                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses          136                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return        12391      1.92%      1.92% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect        12532      1.95%      3.87% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect          128      0.02%      3.89% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond       603941     93.77%     97.66% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond        13273      2.06%     99.72% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%     99.72% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond         1782      0.28%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total       644047                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return        12311     42.24%     42.24% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect          354      1.21%     43.46% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect           82      0.28%     43.74% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond        14357     49.26%     93.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond          257      0.88%     93.89% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     93.89% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond         1782      6.11%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total        29143                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect          191      7.72%      7.72% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%      7.72% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond         2161     87.38%     95.11% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond          121      4.89%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total         2473                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect          191      7.72%      7.72% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%      7.72% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond         2161     87.38%     95.11% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond          121      4.89%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total         2473                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups         1910                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits         1774                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses          136                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           43                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords         1953                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows           14                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes        13064                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops        13059                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes         1072                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used        11986                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct        11985                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            1                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts      1086930                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls          123                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts        11400                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples     12398442                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     1.120117                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.394125                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0      5226972     42.16%     42.16% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1      4580830     36.95%     79.11% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2       505990      4.08%     83.19% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3        43704      0.35%     83.54% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4      2040946     16.46%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value            4                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total     12398442                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           81                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls        11991                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           84      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu      6222808     44.81%     44.81% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult           38      0.00%     44.81% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv            5      0.00%     44.81% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd      1000000      7.20%     52.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            2      0.00%     52.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            4      0.00%     52.01% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult      1000000      7.20%     59.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     59.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     59.21% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc        10001      0.07%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     59.28% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead      1059115      7.63%     66.91% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite       535629      3.86%     70.77% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead      3030005     21.82%     92.58% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite      1030015      7.42%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total     13887706                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples      2040946                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts     13887659                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps     13887706                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP     13887659                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP     13887706                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     0.904589                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     1.105474                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs      5654764                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts      6070027                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts     11864854                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts      4089107                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts      1565644                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           84      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu      6222808     44.81%     44.81% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult           38      0.00%     44.81% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv            5      0.00%     44.81% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd      1000000      7.20%     52.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            2      0.00%     52.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            4      0.00%     52.01% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult      1000000      7.20%     59.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     59.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     59.21% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc        10001      0.07%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     59.28% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead      1059115      7.63%     66.91% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite       535629      3.86%     70.77% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead      3030005     21.82%     92.58% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite      1030015      7.42%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total     13887706                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl       579538                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl       565758                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl        13780                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl       541036                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl        38502                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall        11991                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn        11986                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles       673369                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles      9876504                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles       462690                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles      1510896                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles        11657                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved       600622                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred         1196                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts     15093702                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         4828                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts     14430829                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches       580913                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts      4261872                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts      1566508                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     1.148711                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numFpRegReads      5070350                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites      5220766                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads     10737485                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites      7074068                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs      5828380                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads      8261006                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numMiscRegWrites      7050020                       # Number of times the Misc registers were written (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches       626742                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles      10754081                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles        25680                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines      1748808                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes         1710                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples     12535116                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     1.237242                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     2.461408                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0      9427641     75.21%     75.21% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1       198289      1.58%     76.79% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2       320670      2.56%     79.35% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3       693694      5.53%     84.88% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4       214920      1.71%     86.60% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5       168442      1.34%     87.94% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6       552481      4.41%     92.35% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7       100352      0.80%     93.15% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8       858627      6.85%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value            8                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total     12535116                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts     15508851                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     1.234523                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches       644047                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.051267                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles      1768195                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles        11657                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles       141983                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles       180644                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts     14974661                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts          632                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts      4410504                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts      1687808                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           71                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents          332                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents       180283                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          283                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect        10953                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          534                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts        11487                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit     14430060                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount     14429676                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst     11714961                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst     11863144                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        1.148619                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.987509                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads      1042305                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads       321397                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses           26                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          283                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores       122151                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            0                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache           72                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples      4089107                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     2.837554                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev     2.327902                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9      4086880     99.95%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19          229      0.01%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29         1260      0.03%     99.98% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39          154      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49           40      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59           60      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69           82      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79           53      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89           22      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99           16      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109           21      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119           25      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129            7      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139            7      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149            5      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159            5      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169            2      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179           12      0.00%     99.99% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189          105      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199            7      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209           12      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219            3      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229           34      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249            6      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259            4      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::260-269           12      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279           14      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289            5      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::290-299            2      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows           23      0.00%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          940                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total      4089107                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.dtb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.dtb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.itb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.itb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON   4183354791                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles        11657                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles      1275279                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles       323227                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles         3835                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles      1371316                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles      9549802                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts     14979978                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents           29                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.IQFullEvents      2989422                       # Number of times rename has blocked due to IQ full (Count)
board.processor.cores.core.rename.LQFullEvents      9548012                       # Number of times rename has blocked due to LQ full (Count)
board.processor.cores.core.rename.SQFullEvents         1247                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.renamedOperands     12683836                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups     17225019                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups     11210388                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups      5452895                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.committedMaps     11754458                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps       929378                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing           56                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing           56                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts      9459315                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads         25331911                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes        30085962                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts     13887659                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps     13887706                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls           15                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
